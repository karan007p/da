 Q.1)CreateaHTMLfiletoinserttextbeforeandafteraParagraphusi
 before()
 Andafter()].
 Ans:
 <!DOCTYPEhtml>
 ngjQuery.[Hint:Use
<html>
 <head>
 <titl
 e>Inserttextbeforeandafterparagraphusi
 <scriptsrc=https:
 //code.j
 ngjQuery</ti
 tle>
 query.com/j
 query-3.6.
 0.min.j
 s></scri
 pt>
 </head>
 <body>
 <h1>Inserttextbeforeandafterparagraphusi
 <p>Thisisaparagraph.</p>
 <script>
 $(document).ready(functi
 $(“p”).
 $(“p”).
 after(“Texti
 });
 </scri
 pt>
 </body>
 </html>
 Q2).Createthefol
 ngjQuery</h1>
 on(){
 before(“Texti
 nsertedbeforetheparagraph.“);
 nsertedaftertheparagraph.
 lowingdatasetinpython&Convertthecategori
 format.Appl
 y
 Theapriorial
 ”);
 calvaluesintonumeri
 gorithmontheabovedatasettogeneratethefrequenti
 c
 temsetsandassociation
 rules.Repeat
 Theprocesswithdifferentmi
 n_supvalues.
TID={1:[“eggs”,”milk”,”bread”],2=[“eggs”,”apple”],3=[“milk”,”bread”],4=[“apple”,”milk”],5=[“milk”,”ap
 ple”,”bread”]}
 Ans:
 Importpandasaspd
 Frommlxtend.preprocessingimportTransactionEncoder
 Frommlxtend.frequent_patternsimportapriori,association_rules
 #Createthedataset
 Dataset={
 1:[“eggs”,”milk”,”bread”],
 2:[“eggs”,”apple”],
 3:[“milk”,”bread”],
 4:[“apple”,”milk”],
 5:[“milk”,”apple”,”bread”]
 }
 #Convertcategoricalvaluesintonumericformat
 Te=TransactionEncoder()
 Te_ary=te.fit(dataset.values()).transform(dataset.values())
 Df=pd.DataFrame(te_ary,columns=te.columns_)
 #ApplyApriorialgorithmtogeneratefrequentitemsetsandassociationrules
 Min_sup=0.4
 Frequent_itemsets=apriori(df,min_support=min_sup,use_colnames=True)
 Association_rules=association_rules(frequent_itemsets,metric=”confidence”,
 min_threshold=0.6)
 #Printthefrequentitemsetsandassociationrules
Print(“Fr
 equentItemsets:
 \n”,frequent_i
 temsets)
 Print(“\nAssoci
 ationRules:
 \n”,associ
 
